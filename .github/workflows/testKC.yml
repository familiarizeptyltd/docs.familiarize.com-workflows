name: KiloCode CLI demo (non-interactive)

on:
  workflow_dispatch:

jobs:
  kilocode-demo:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install KiloCode CLI
        run: |
          npm install -g @kilocode/cli
          kilocode --version

      - name: Write KiloCode config for CLI path
        env:
          KILOCODE_TOKEN: ${{ secrets.KILOCODE_TOKEN }}
        run: |
          set -euo pipefail
          mkdir -p "$HOME/.kilocode/cli" "$HOME/.kilocode"

          cat > "$HOME/.kilocode/cli/config.json" <<'JSON'
          {
            "version": 1,
            "currentProvider": "default",
            "providers": [
              {
                "id": "default",
                "provider": "kilocode",
                "kilocodeToken": "__KILOCODE_TOKEN__",
                "kilocodeModel": "x-ai/grok-code-fast-1"
              }
            ],
            "autoApproval": {
              "enabled": true,
              "read": { "enabled": true, "outside": false },
              "write": { "enabled": true, "outside": false, "protected": false },
              "execute": {
                "enabled": true,
                "allowed": ["git", "node", "npm", "pnpm"],
                "denied": ["sudo", "rm -rf", "git push --force"]
              },
              "question": { "enabled": false, "timeout": 60 },
              "retry": { "enabled": true, "delay": 10 }
            }
          }
          JSON

          # Mirror for legacy path (optional)
          cp "$HOME/.kilocode/cli/config.json" "$HOME/.kilocode/config.json"

          # Inject token
          sed -i "s/__KILOCODE_TOKEN__/${KILOCODE_TOKEN//\//\\/}/" "$HOME/.kilocode/cli/config.json"
          sed -i "s/__KILOCODE_TOKEN__/${KILOCODE_TOKEN//\//\\/}/" "$HOME/.kilocode/config.json"

      - name: Show config paths & contents (masked)
        env:
          KILOCODE_TOKEN: ${{ secrets.KILOCODE_API_KEY }}
        run: |
          set -euo pipefail
          # Mask the actual token value in logs
          echo "::add-mask::$KILOCODE_TOKEN"

          echo "Home directory: $HOME"
          echo "Expected config locations:"
          printf " - %s\n" "$HOME/.kilocode/cli/config.json" "$HOME/.kilocode/config.json"
          echo

          echo "[Tree] $HOME/.kilocode"
          ls -la "$HOME/.kilocode" || true
          echo
          echo "[Tree] $HOME/.kilocode/cli"
          ls -la "$HOME/.kilocode/cli" || true
          echo

          # Print file contents, pretty if jq exists; token is masked by Actions
          for f in "$HOME/.kilocode/config.json" "$HOME/.kilocode/cli/config.json"; do
            if [ -f "$f" ]; then
              echo "----- CONTENTS OF: $f -----"
              if command -v jq >/dev/null 2>&1; then
                jq . "$f" || cat "$f"
              else
                cat "$f"
              fi
              echo "--------------------------------"
              echo
            else
              echo "Missing: $f"
            fi
          done

      - name: Run KiloCode in autonomous mode
        run: |
          echo "Create or update a file named KILOCODE_DEMO.md at the repo root. Add a markdown H1 'KiloCode CLI Demo', today's UTC timestamp, and a short note: 'Hello from GitHub Actions.' Keep it idempotent." \
          | kilocode --auto --timeout 300

      - name: Commit and push changes (if any)
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore: update via KiloCode CLI demo"
            git push
          else
            echo "No changes to commit."
          fi